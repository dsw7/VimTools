*vimtools.txt*

    *** Plugin that integrates VimTools with Vim ***

==============================================================================
USAGE INSTRUCTIONS                                              *vimtools-usage*

1. *Cls*
    {Description}: Clear the / register.
          {Usage}: `Cls` <no-arguments>

2. *Ws*
    {Description}: Remove all whitespace between the last word and
                   the newline.
          {Usage}: `Ws` <no-arguments>

3. *Wl*
    {Description}: Remove all whitespace before a set of lines (i.e. de-indent).
          {Usage}: `Wl` <start-line> <end-line>
        {Example}: Deindent a function between lines 2 and 5:
                 : -> `:Wl` `2` `5`

5. *Ind*
    {Description}: Indent by a set number of tabs between a set of line numbers.

       {Scenario}: Indent by 4 spaces:
          {Usage}: `Ind` <start-line> <end-line>
        {Example}: Indent a function between lines 2 and 5:
                 : -> `:Ind` `2` `5`

       {Scenario}: Indent by more than 4 spaces:
          {Usage}: `Ind` <start-line> <end-line> <number-tabs>
        {Example}: Indent between lines 2 and 5 by 12 spaces (3 tabs):
                 : -> `:Ind` `2` `5` `3`

7. *Ins*
    {Description}: Insert a delimiter before a set of lines.
          {Usage}: `Ins` <character> <start-line> <end-line>
        {Example}: Comment out a Python function between lines 2 and 5:
                 : -> `:Ins` `#` `2` `5`

8. *S*
    {Description}: Replace a pattern between a set of lines or globally.

       {Scenario}: Replace a pattern globally:
          {Usage}: `/`<pattern> -> `S` <new-string>
        {Example}: Replace "foo" with "bar" throughout file:
                 : -> `:/foo`
                 : -> `:S` `bar`

       {Scenario}: Replace a pattern on one line only:
          {Usage}: `/`<pattern> -> `S` <new-string> <line-number>
        {Example}: Replace "foo" with "bar" only on line 5:
                 : -> `:/foo`
                 : -> `:S` `bar 5`

       {Scenario}: Replace a pattern between a set of lines:
          {Usage}: `/`<pattern> -> `S` <new-string> <start-line> <end-line>
        {Example}: Replace "foo" with "bar" between lines 2 and 5:
                 : -> `:/foo`
                 : -> `:S` `bar` `2` `5`

       {Scenario}: Replace from start of file to specific line:
          {Usage}: `/`<pattern> -> `S` <new-string> :<line>
        {Example}: Replace "foo" with "bar" up to line 5:
                 : -> `:/foo`
                 : -> `:S` `bar` `:5`

       {Scenario}: Replace from specific line to end of file:
          {Usage}: `/`<pattern> -> `S` <new-string> <line>:
        {Example}: Replace "foo" with "bar" from line 5 to end of file:
                 : -> `:/foo`
                 : -> `:S` `bar` `5:`

9. *Mv*
    {Description}: Drag a set of lines to some new line.
          {Usage}: `Mv` <start-line> <end-line> <destination-line>
        {Example}: Drag lines 2 through 5 to line 7:
                 : -> `:Mv` `2` `5` `7`

10. *Paste*
    {Description}: Paste system clipboard contents to current cursor position.
          {Usage}: `Paste` <no-arguments>

11. *Col*
    {Description}: Toggle cursor column. Useful for checking vertical alignment.
          {Usage}: `Col` <no-arguments> (or type `cx` in normal mode)

12. *Menu*
    {Description}: The "main menu" for managing housekeeping tasks.
          {Usage}: `Menu` <no-arguments>

13. *Vs*
    {Description}: Toggle between vertical and horizontal vimdiff splits.
                   The `Vs` command will only work in vimdiff mode!
          {Usage}: `Vs` <no-arguments>

14. *Num*
    {Description}: Toggle between relative and absolute line numbering.
          {Usage}: `Num` <no-arguments> (or type `ss` in normal mode)

==============================================================================
ADDING VIMTOOLS COMMANDS                              *adding-vimtools-commands*

1. Make sure to add a relevant tag, say for a new command, i.e. *:Foo*
2. Run `:helptags` `/path/to/.vim/doc` to rebuild the list of tags.
3. Run `:help` `Foo` to make sure the new tag is found.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:
